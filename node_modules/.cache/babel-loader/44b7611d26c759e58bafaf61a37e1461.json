{"ast":null,"code":"var _jsxFileName = \"/Users/blue/recipes/new-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst ReactMarkdown = require('react-markdown');\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipes: [{\n        clicked: false,\n        link: 'https://katie-matt-recipes.s3.amazonaws.com/Barbacoa+(Instant+Pot).md'\n      }, {\n        clicked: false,\n        link: 'https://katie-matt-recipes.s3.amazonaws.com/Basic+Pan+Sauce.md'\n      }],\n      show_links: true\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState({\n      button_clicked: true\n    });\n  }\n\n  render() {\n    const show_links = this.state.show_links;\n\n    if (show_links) {\n      const recipes = this.state.recipes;\n      const links = recipes.map((recipe, index) => /*#__PURE__*/React.createElement(ListRecipeLink, {\n        key: index,\n        link: recipe.link,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, links);\n    } else {}\n\n    if (button_clicked) {\n      return /*#__PURE__*/React.createElement(ListRecipe, {\n        link: \"https://katie-matt-recipes.s3.amazonaws.com/Barbacoa+(Instant+Pot).md\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(ListRecipeLink, {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nclass ListRecipeLink extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.onClick(this.props.key);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nclass ListRecipe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipe_text: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ReactMarkdown, {\n      source: this.state.recipe_text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    });\n  }\n\n  componentDidMount() {\n    const link = this.props.link;\n    fetch(link).then(response => response.blob()).then(blob => blob.text()).then(text => this.setState({\n      recipe_text: text\n    }));\n  }\n\n}\n\nReactDOM.render(\n/*#__PURE__*/\n//<ListRecipeLink />,\nReact.createElement(HomePage, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 3\n  }\n}), //<ListRecipe\n//  link=''\n///>,\ndocument.getElementById('root'));","map":{"version":3,"sources":["/Users/blue/recipes/new-app/src/index.js"],"names":["React","ReactDOM","ReactMarkdown","require","HomePage","Component","constructor","props","state","recipes","clicked","link","show_links","handleClick","bind","setState","button_clicked","render","links","map","recipe","index","ListRecipeLink","onClick","key","ListRecipe","recipe_text","componentDidMount","fetch","then","response","blob","text","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nconst ReactMarkdown = require('react-markdown')\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipes: [\n        {\n          clicked: false,\n          link: 'https://katie-matt-recipes.s3.amazonaws.com/Barbacoa+(Instant+Pot).md'\n        },\n        {\n          clicked: false,\n          link: 'https://katie-matt-recipes.s3.amazonaws.com/Basic+Pan+Sauce.md'\n        }\n      ],\n      show_links: true,\n    }\n    \n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState({button_clicked: true});\n  }\n\n  render() {\n    const show_links = this.state.show_links;\n    if (show_links) {\n      const recipes = this.state.recipes;\n      const links = recipes.map((recipe, index) => \n        <ListRecipeLink key={index} link={recipe.link} />\n      );\n      return (\n        <div>\n          {links}\n        </div>\n      );\n    }\n    else {\n\n    }\n    if (button_clicked) {\n      return (\n        <ListRecipe\n          link='https://katie-matt-recipes.s3.amazonaws.com/Barbacoa+(Instant+Pot).md'\n        />\n      )\n    }\n    return (\n      <ListRecipeLink onClick={this.handleClick} />\n    )\n  }\n}\nclass ListRecipeLink extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.onClick(this.props.key);\n  }\n\n  render() {\n    return (\n      <button onClick={this.props.onClick}/>\n    );\n  }\n\n}\n\nclass ListRecipe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipe_text: '',\n    };\n  }\n\n  render() {\n    return (\n      <ReactMarkdown source={this.state.recipe_text} />\n    );\n  }\n\n  componentDidMount() {\n    const link = this.props.link;\n    fetch(link)\n      .then(response => response.blob())\n        .then(blob => blob.text())\n          .then(text => this.setState({recipe_text: text}));\n  }\n}\n  \n\nReactDOM.render(\n  //<ListRecipeLink />,\n  <HomePage />,\n  //<ListRecipe\n  //  link=''\n  ///>,\n  document.getElementById('root')\n);\n  "]},"metadata":{},"sourceType":"module"}